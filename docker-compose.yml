version: '3.8'

services:
  # Ana uygulama - API server
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs
      - ./models:/app/models
    environment:
      - PYTHONPATH=/app/src:/app
      - CONFIG_PATH=/app/configs/logic.yaml
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Inference service - Batch processing
  inference:
    build: .
    command: ["python", "scripts/infer.py", "--config", "configs/logic.yaml", "--source", "/app/data/input", "--output", "/app/data/output"]
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs
      - ./models:/app/models
    environment:
      - PYTHONPATH=/app/src:/app
    restart: "no"
    profiles:
      - batch

  # Training service
  training:
    build: .
    command: ["python", "scripts/train.py", "--config", "configs/model.yaml", "--data", "/app/data/yolo_dataset"]
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs
      - ./models:/app/models
    environment:
      - PYTHONPATH=/app/src:/app
    restart: "no"
    profiles:
      - train
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Evaluation service
  evaluation:
    build: .
    command: ["python", "scripts/eval.py", "--predictions", "/app/data/predictions", "--ground-truth", "/app/data/ground_truth"]
    volumes:
      - ./data:/app/data
      - ./configs:/app/configs
    environment:
      - PYTHONPATH=/app/src:/app
    restart: "no"
    profiles:
      - eval

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: hand-detection-network
